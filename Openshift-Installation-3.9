172.24.0.151    master.openshift.com
172.24.0.152    infra.openshift.com 
172.24.0.153    node1.openshift.com 
172.24.0.154    node2.openshift.com 

--> Set Hostname
hostnamectl set-hostname master.openshift.com
hostnamectl set-hostname infra.openshift.com
hostnamectl set-hostname node1.openshift.com
hostnamectl set-hostname node2.openshift.com

--> Set IP Address
master.openshift.com
nmcli connection add type ethernet con-name eth0 ifname ens33 ipv4.method manual ipv4.addresses 172.24.0.151/24 ipv4.gateway 172.24.0.2 ipv4.dns 172.24.0.2 autoconnect yes; nmcli connection up eth0
infra.openshift.com
nmcli connection add type ethernet con-name eth0 ifname ens33 ipv4.method manual ipv4.addresses 172.24.0.152/24 ipv4.gateway 172.24.0.2 ipv4.dns 172.24.0.2 autoconnect yes; nmcli connection up eth0
node1.openshift.com
nmcli connection add type ethernet con-name eth0 ifname ens33 ipv4.method manual ipv4.addresses 172.24.0.153/24 ipv4.gateway 172.24.0.2 ipv4.dns 172.24.0.2 autoconnect yes; nmcli connection up eth0
node2.openshift.com
nmcli connection add type ethernet con-name eth0 ifname ens33 ipv4.method manual ipv4.addresses 172.24.0.154/24 ipv4.gateway 172.24.0.2 ipv4.dns 172.24.0.2 autoconnect yes; nmcli connection up eth0

--> Entry in /etc/hosts file on all Servers
cat /etc/hosts
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
172.24.0.151    master.openshift.com    master
172.24.0.152    infra.openshift.com     infra
172.24.0.153    node1.openshift.com     node1
172.24.0.154    node2.openshift.com     node2

--> Update the OS and take reboot on all servers
master.openshift.com
yum update -y
reboot

--> install epel and required package on all servers
yum install wget git zile nano net-tools docker-1.13.1 bind-utils iptables-service bridge-utils bash-completion kexec-tools sos psacct openssl-devel httpd-tools NetworkManager python-cryptography python2-pip python-devel python-passlib java-1.8.0-openjdk-headless "@Development Tools" -y
Install epel package and disable it (we required some package from epel at that time we will temporary enabled it)
rpm -ivh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
yum install python2-pip.noarch zile.x86_64 -y
sed -i -e "s/^enabled=1/enabled=0/g" /etc/yum.repos.d/epel.repo


--> Make sure NetworkManager service should be running on all servers
systemctl status NetworkManager
systemctl start NetworkManager
systemctl enable NetworkManager
systemctl status NetworkManager

--> Make sure docker service should be running on all servers
systemctl status docker
systemctl start docker
systemctl enable docker
systemctl status docker

=======================================================
Perform on Master Node
=======================================================
--> Install package
yum --enablerepo=epel install ansible pyOpenSSL -y

!!!!! if ansible version > 2.7 then uninstall it and need to follow this step !!!!
pip2 --version
pip install ansible==2.6

--> Create git clone of version 3.9
git clone https://github.com/openshift/openshift-ansible.git
cd openshift-ansible && git fetch && git checkout release-3.9
git branch

--> Make password less authentication from master to other and itself as well
ssh-keygen -f ~/.ssh/id_rsa -N ''
for n in master.openshift.com infra.openshift.com node1.openshift.com node2.openshift.com; do ssh-copy-id $n; done

--> Create inventory file
vim /root/openshift-ansible/inventory.ini
[OSEv3:children]
masters
nodes
etcd

[masters]
master.openshift.com openshift_ip=172.24.0.151

[etcd]
master.openshift.com openshift_ip=172.24.0.151

[nodes]
master.openshift.com openshift_ip=172.24.0.151 openshift_schedulable=true
infra.openshift.com openshift_ip=172.24.0.152 openshift_schedulable=true openshift_node_labels="{'region': 'infra', 'zone': 'default'}"
node1.openshift.com openshift_ip=172.24.0.153 openshift_schedulable=true openshift_node_labels="{'region': 'primary', 'zone': 'default'}"
node2.openshift.com openshift_ip=172.24.0.154 openshift_schedulable=true openshift_node_labels="{'region': 'primary', 'zone': 'default'}"

[OSEv3:vars]
debug_level=4
ansible_ssh_user=root
enable_excluders=False
enable_docker_excluders=False
openshift_enable_service_catlog=False
ansible_service_broker_install=False

containerized=True
os_sdn_network_plugin_name='redhat/openshift-ovs-multitenant'
openshift_dsable_check=disk_availability,docker_storage,memory_availability,docker_image_availabilty

openshift_node_kubelet_args={'pods-per-core': ['10']}

deplyoment_type=origin
openshift_deployment_type=origin

openshift_release=v3.9.0
openshift_pkg_version=-3.9.0
openshift_image_tag=v3.9.0
openshift_service_catalog_image_version=v3.9.0
template_service_broker_image_version=v3.9.0
osm_use_cockpit=true

# put the router on dedicated infra node
openshift_hosted_router_selector='region=infra'
openshift_master_default_subdomain=apps.openshift.com
openshift_public_hostname=master.openshift.com

# put the image registry on dedicated infra node
openshift_hosted_registry_selector='region=infra'

# Use htpasswd authentication with demo/demo
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]
openshift_master_htpasswd_users={'demo': '$apr1$4Wpwz1wm$rd9xHn0QgeDUV1hPVcfrN/'}

##--------###
# If you can pull the image down to the node with docker pull, this generally indicates an issue with skopeo which can be ignored. To ignore this error, please set the following variable in your Ansible inventory file
#openshift_disable_check=docker_image_availability

#osm_cluster_network_cidr=10.100.0.0/16 #If we want to change the network ID for Pods
#openshift_portal_net=172.100.0.0/16 #If we want to change network ID for cluster IPs


 
 Note - (Password redhat@123)

--> Run prerequisites playbook 
ansible-playbook -i inventory.ini playbooks/prerequisites.yml

--> Run deploy playbook
Note - Before executing deploy playbook. We should download some pre-required images on respective node to save time during execution of deploy playbook
===========
Infra, node1, node2
docker pull docker.io/openshift/openvswitch:v3.9.0 && docker pull docker.io/openshift/node:v3.9.0 && docker pull docker.io/openshift/origin:v3.9.0
===========

=========
Master Node
docker pull registry.fedoraproject.org/latest/etcd:latest && docker pull docker.io/openshift/openvswitch:v3.9.0 && docker pull docker.io/openshift/node:v3.9.0 && docker pull docker.io/openshift/origin:v3.9.0
==========

ansible-playbook -i inventory.ini playbooks/deploy_cluster.yml

Note: If required we can change the value of default memory and disk using below files
./playbooks/openstack/openshift-cluster/roles/openshift_health_checker/openshift_checks/memory_availability.py
./playbooks/openstack/openshift-cluster/roles/openshift_health_checker/openshift_checks/disk_availability.py

--> Set Admin Password
cat /etc/origin/master/htpasswd
htpasswd /etc/origin/master/htpasswd admin

--> Set Admin policy to admin user
oc adm policy add-cluster-role-to-user cluster-admin admin

--> Login to CLI or web based
https://172.24.0.151:8443/
